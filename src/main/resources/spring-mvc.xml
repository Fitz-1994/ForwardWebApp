<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:forwardweb.properties" />

    <!-- 启用spring mvc 注解 -->
    <context:annotation-config />
    <!--&lt;!&ndash; 完成请求和注解POJO的映射 &ndash;&gt;
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />-->

    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="cn.forward" ></context:component-scan>
    <!-- 默认注册映射的支持 -->
    <mvc:annotation-driven />

    <!-- 视图解释类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
    </bean>

    <!-- 对静态资源文件的访问  方案一 （二选一） -->
    <mvc:default-servlet-handler/>

    <!-- 对静态资源文件的访问  方案二 （二选一）-->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31556926"/>

    <!-- 定义无Controller的path<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:${frontPath}"/>

    <!-- 登录拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/${adminPath}/*"/> <!-- 拦截路径 -->
            <mvc:exclude-mapping path="/${adminPath}/"/>  <!-- 排除的拦截路径 -->
            <mvc:exclude-mapping path="/${adminPath}/login"/>  <!-- 排除的拦截路径 -->
            <bean class="cn.forward.common.Session.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>